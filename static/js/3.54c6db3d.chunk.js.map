{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","assets/img/image.jpg","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Posts/Post/Post.module.css","components/Profile/Posts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Posts/Post/Post.tsx","components/Profile/Posts/MyPost.tsx","components/Profile/Posts/MyPosts.tsx","components/Profile/Posts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","reduxForm","form","profile","handleSubmit","error","onSubmit","className","s","descriptionBlock","lg","formSummaryError","CreateField","Input","type","TextArea","keys","contacts","map","key","contact","ProfileData","isOwner","goToEditMode","onClick","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","contactTitle","contactValue","Contacts","ProfileInfo","savePhoto","saveProfile","mainPhoto","src","photos","large","userPhoto","alt","target","files","initialValues","formData","then","Post","item","message","likesCount","maxLength10","maxLengthCreator","ReduxAddPost","Field","validate","required","name","placeholder","component","MyPost","postsBlock","elements","MyPosts","React","memo","postsElements","post","p","values","addPosts","newPostText","MyPostsContainer","connect","state","profilePage","posts","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","setUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.54c6db3d.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default __webpack_public_path__ + \"static/media/image.b6ed426e.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__sodEd\",\"mainPhoto\":\"ProfileInfo_mainPhoto__3dvhv\",\"contact\":\"ProfileInfo_contact__3h1io\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__366-i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__3NYyy\",\"postsBlock\":\"MyPosts_postsBlock__2xEpi\",\"posts\":\"MyPosts_posts__SPSS6\"};","import React, { ChangeEvent, useEffect, useState } from \"react\";\n\ntype ProfileStatusWithHooksType = {\n  status: string;\n  updateStatus: (status: string) => void;\n};\n\nconst ProfileStatusWithHooks = (props: ProfileStatusWithHooksType) => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState(props.status);\n\n  useEffect(() => {\n    setStatus(props.status);\n  }, [props.status]);\n\n  const activateEditMode = () => {\n    setEditMode(true);\n  };\n\n  const deactivateEditMode = () => {\n    setEditMode(false);\n    props.updateStatus(status);\n  };\n\n  const onStatusChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setStatus(e.currentTarget.value);\n  };\n\n  return (\n    <div>\n      {!editMode && (\n        <div>\n          <span onDoubleClick={activateEditMode}>\n            {props.status || \"No Status\"}\n          </span>\n        </div>\n      )}\n      {editMode && (\n        <div>\n          <input\n            onChange={onStatusChange}\n            autoFocus={true}\n            onBlur={deactivateEditMode}\n            value={status}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default ProfileStatusWithHooks;\n","import React from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport lg from \"../../Common/FormsControls/FormsControls.module.css\";\nimport {CreateField, Input, TextArea} from \"../../Common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\n\nconst ProfileDataForm = ({profile,handleSubmit,error}: any) => {\n\n    return <form onSubmit={handleSubmit} className={s.descriptionBlock}>\n        <div><button>save</button></div>\n        {error && <div className={lg.formSummaryError}>\n            {error}\n        </div>}\n        <div> Full Name <div>{CreateField(\"Full name\", \"fullName\", [], Input)}</div></div>\n        {/*<div>{profile.aboutMe}</div>*/}\n\n          <div>Looking for a Job {CreateField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}</div>\n\n        <div>\n            <b>My proffesional skills:</b>\n            {CreateField(\"My proffesional skills\", \"lookingForAJobDescription\", [], TextArea)}\n        </div>\n\n        <div>About Me: </div>\n        {CreateField(\"About Me\", \"aboutMe\", [], TextArea)}\n        <div>\n            <div>\n                <b>Contacts:</b> : {Object.keys(profile.contacts).map(key => {\n                return <div key={key} className={s.contact}>\n                    <strong>{key}: {CreateField(key, \"contacts.\" + key, [], Input)}</strong>\n                </div>\n            })}\n            </div>\n        </div>\n    </form>\n}\n\n\nconst ProfileDataFormReduxForm = reduxForm({form: \"edit-profile\"})(ProfileDataForm)\nexport default ProfileDataFormReduxForm","import React, { ChangeEvent, useState } from \"react\";\nimport s from \"./ProfileInfo.module.css\";\nimport PreLoader from \"../../Common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\nimport userPhoto from \"../../../assets/img/image.jpg\";\nimport ProfileDataForm from \"./ProfileDataForm\";\n\nconst ProfileInfo = ({\n  profile,\n  savePhoto,\n  isOwner,\n  status,\n  updateStatus,\n  saveProfile,\n}: any) => {\n  const [editMode, setEditMode] = useState(false);\n\n  if (!profile) {\n    return <PreLoader />;\n  }\n\n  const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files && e.target.files.length) {\n      savePhoto(e.target.files[0]);\n    }\n  };\n\n  const onSubmit = (formData: any) => {\n    saveProfile(formData).then(() => {\n      setEditMode(false);\n    });\n  };\n\n  return (\n    <div>\n      {/*<div>*/}\n      {/*    <img src=\"https://www.talkwalker.com/images/2020/blog-headers/image-analysis.png\" alt=\"\"/>*/}\n      {/*</div>*/}\n      <img\n        className={s.mainPhoto}\n        src={profile.photos.large || userPhoto}\n        alt=\"\"\n      />\n      {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\n      <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n      {editMode ? (\n        <ProfileDataForm\n          // @ts-ignore\n          profile={profile}\n          initialValues={profile}\n          onSubmit={onSubmit}\n        />\n      ) : (\n        <ProfileData\n          profile={profile}\n          isOwner={isOwner}\n          goToEditMode={() => setEditMode(true)}\n        />\n      )}\n    </div>\n  );\n};\n\nconst ProfileData = ({ profile, isOwner, goToEditMode, ...props }: any) => {\n  return (\n    <div className={s.descriptionBlock}>\n      {isOwner && (\n        <div>\n          <button onClick={goToEditMode}>edit</button>\n        </div>\n      )}\n      <div>\n        Full Name\n        <div>{profile.fullName}</div>\n      </div>\n      <div>\n        About Me\n        <div>{profile.aboutMe}</div>\n      </div>\n      <div>\n        {profile.lookingForAJob && (\n          <div>\n            lookingForAJobDescription{\" \"}\n            <div>{profile.lookingForAJobDescription}</div>\n          </div>\n        )}\n      </div>\n      <div>\n        Looking for a Job: <div>{profile.lookingForAJob ? \"Yes\" : \"No\"}</div>\n      </div>\n      <div>\n        <div>\n          <b>Contacts:</b> :{\" \"}\n          {Object.keys(profile.contacts).map((key) => {\n            return (\n              <Contacts\n                contactTitle={key}\n                contactValue={profile.contacts[key]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Contacts = ({ contactTitle, contactValue }: any) => {\n  return (\n    <div className={s.contact}>\n      <b>{contactTitle}</b> : {contactValue}\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\r\nimport s from './Post.module.css';\r\nimport {PostType} from \"../MyPosts\";\r\n\r\nconst Post = (props: PostType) => {\r\n    return (\r\n        <div  className={s.item}>\r\n            <img\r\n                src=\"https://scontent.fiev13-1.fna.fbcdn.net/v/t1.0-1/s320x320/79515135_10111007623880301_5111576226921709568_o.jpg?_nc_cat=1&ccb=2&_nc_sid=7206a8&_nc_ohc=0lzloRNQk5cAX_v-G_b&_nc_ht=scontent.fiev13-1.fna&tp=7&oh=04022734a046621ca05c6f9c6bb207f4&oe=5FF8DFAD\"\r\n                alt=\"\"/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/Validators/validators\";\r\nimport {TextArea} from \"../../Common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst AddPost = (props: any) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field validate={[required, maxLength10]} name={\"newPostText\"} placeholder={\"Post Message\"} component={TextArea}/>\r\n            <button>Add Post</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ReduxAddPost = reduxForm({\r\n    form: \"add-post\"\r\n})(AddPost)\r\n\r\n\r\nexport function MyPost(props: { onSubmit: (values: any) => void, elements: JSX.Element[] }) {\r\n    return <>\r\n        <div className={s.postsBlock}>\r\n            <h3>New Post</h3>\r\n            <ReduxAddPost onSubmit={props.onSubmit}/>\r\n        </div>\r\n        <div>\r\n            {props.elements}\r\n        </div>\r\n    </>;\r\n}","import React from \"react\";\nimport Post from \"./Post/Post\";\nimport { MyPost } from \"./MyPost\";\n\nexport type MyPostsPropsType = {\n  post: Array<PostType>;\n  addPosts: (newPostText: string) => void;\n  updateNewPostText: (text: string) => void;\n};\n\nexport type PostType = {\n  message: string;\n  likesCount: number;\n};\n\nconst MyPosts = React.memo((props: MyPostsPropsType) => {\n  let postsElements = props.post.map((p) => {\n    return <Post message={p.message} likesCount={p.likesCount} />;\n  });\n  const onSubmit = (values: any) => {\n    props.addPosts(values.newPostText);\n  };\n  return (\n    <div>\n      <MyPost onSubmit={onSubmit} elements={postsElements} />\n    </div>\n  );\n});\n\nexport default MyPosts;\n","import React from \"react\";\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\nimport { RootStoreType } from \"../../../redux/store\";\nimport { connect } from \"react-redux\";\nimport Profile from \"../Profile\";\nimport MyPosts, { PostType } from \"./MyPosts\";\nimport { DispatchType, StateType } from \"../../../types/types\";\n\ntype myPostsContainerPropsType = {\n  store: RootStoreType;\n};\n\ntype MapStateToProps = {\n  post: Array<PostType>;\n  newPostText: string;\n};\n\ntype MapDispatchToProps = {\n  addPosts: (newPostText: string) => void;\n};\n\nconst mapStateToProps = (state: StateType): MapStateToProps => {\n  return {\n    post: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText,\n  };\n};\n\nconst mapDispatchToProps = (dispatch: DispatchType): MapDispatchToProps => {\n  return {\n    addPosts: (newPostText) => {\n      dispatch(addPostActionCreator(newPostText));\n    },\n  };\n};\n\nconst MyPostsContainer: any = connect<\n  MapStateToProps,\n  unknown,\n  MapDispatchToProps,\n  StateType\n>(\n  mapStateToProps,\n  mapDispatchToProps\n)(MyPosts);\n\nexport default MyPostsContainer;\n","import React from \"react\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nimport MyPostsContainer from \"./Posts/MyPostsContainer\";\nimport { Redirect } from \"react-router-dom\";\nimport { ProfileContainerType } from \"./ProfileContainer\";\nimport { ProfileType } from \"../../types/types\";\n\ntype Profile = {\n  isOwner: boolean;\n  status: string;\n  updateStatus: () => void;\n  savePhoto: () => void;\n};\n\ntype ProfileTypeProps = {\n  setUserProfile: (userId: number | null) => void;\n  getStatus: (userId: number) => void;\n  savePhoto: () => void;\n  updateStatus: () => void;\n  status: string;\n  saveProfile: () => void;\n  isOwner: boolean;\n  profile: ProfileType | null;\n};\n\nconst Profile = (props: ProfileTypeProps) => {\n  return (\n    <div>\n      <ProfileInfo\n        saveProfile={props.saveProfile}\n        savePhoto={props.savePhoto}\n        isOwner={props.isOwner}\n        profile={props.profile}\n        status={props.status}\n        updateStatus={props.updateStatus}\n      />\n      <MyPostsContainer />\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport {\n  getStatus,\n  savePhoto,\n  saveProfile,\n  setUserProfile,\n  updateStatus,\n} from \"../../redux/profileReducer\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport {\n  DispatchType,\n  ProfileType,\n  StateType,\n  UserType,\n} from \"../../types/types\";\n\ntype MapStateToPropsType = {\n  authorizedUserId: number | null;\n  status: string;\n  profile: ProfileType | null;\n  isAuth: boolean;\n};\n\ntype MapDispatchPropsType = {\n  setUserProfile: (userId: number | null) => void;\n  getStatus: (userId: number) => void;\n  savePhoto: () => void;\n  updateStatus: () => void;\n  saveProfile: () => void;\n};\n\ntype OwnPropsType = {};\n\nexport type ProfileContainerType = MapStateToPropsType &\n  MapDispatchPropsType &\n  OwnPropsType;\n\nclass ProfileContainer extends React.Component<\n  StateType &\n    ProfileContainerType &\n    DispatchType &\n    RouteComponentProps<{ userId: string }>\n> {\n  refreshProfile() {\n    let userId: number | null = +this.props.match.params.userId;\n    if (!userId) {\n      userId = this.props.authorizedUserId;\n      if (!userId) {\n        this.props.history.push(\"/login\");\n      }\n    }\n    this.props.setUserProfile(userId);\n    if (typeof userId === \"number\") {\n      this.props.getStatus(userId);\n    }\n  }\n\n  componentDidMount() {\n    this.refreshProfile();\n  }\n\n  componentDidUpdate(\n    prevProps: Readonly<any>,\n    prevState: Readonly<any>,\n    snapshot?: any\n  ) {\n    if (this.props.match.params.userId !== prevProps.match.params.userId) {\n      this.refreshProfile();\n    }\n  }\n\n  render() {\n    return (\n      <Profile\n        {...this.props}\n        isOwner={!this.props.match.params.userId}\n        profile={this.props.profile}\n        status={this.props.status}\n        saveProfile={this.props.saveProfile}\n        updateStatus={this.props.updateStatus}\n        savePhoto={this.props.savePhoto}\n      />\n    );\n  }\n}\n\nlet mapStateToProps = (state: StateType): MapStateToPropsType => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  authorizedUserId: state.auth.userId,\n  isAuth: state.auth.isAuth,\n});\n\nexport default compose<any>(\n  connect<MapStateToPropsType, OwnPropsType, MapDispatchPropsType, StateType>(\n    mapStateToProps,\n    {\n      setUserProfile,\n      getStatus,\n      updateStatus,\n      savePhoto,\n      saveProfile,\n    }\n  ),\n  withRouter\n)(ProfileContainer);\n"],"sourceRoot":""}